<!DOCTYPE html>
<html>
<head>
    <title>User Management</title>
</head>
<body>
<h1>User Management</h1>
<!--proxy合約:<%= '0x...' + contractAddress.slice(36) %>。-->
proxy合約:<%= contractAddress %>。
<!--目前合約 <%= '0x...' + currentAddress.slice(36) %>-->
目前合約: <%= currentAddress %>
<br/>
<label for="RaccountInput">帳號:</label>
<input type="text" id="RaccountInput" name="RaccountInput">
<br>
<label for="RpasswordInput">密碼:</label>
<input type="text" id="RpasswordInput" name="RpasswordInput">
<br>
<label for="RstatusSelect">狀態:</label>
<select id="RstatusSelect" name="RstatusSelect">
    <option value="">-</option>
    <option value="0">停用</option>
    <option value="1">啟用</option>
</select>
<br>
<label for="RcreatedAtStartInput">創建時間(起):</label>
<input type="date" id="RcreatedAtStartInput" name="RcreatedAtStartInput">
<br>
<label for="RcreatedAtEndInput">創建時間(迄):</label>
<input type="date" id="RcreatedAtEndInput" name="RcreatedAtEndInput">
<br>
<label for="RupdatedAtStartInput">更新時間(起):</label>
<input type="date" id="RupdatedAtStartInput" name="RupdatedAtStartInput">
<br>
<label for="RupdatedAtEndInput">更新時間(迄):</label>
<input type="date" id="RupdatedAtEndInput" name="RupdatedAtEndInput">
<br>
<button onclick="filterTable()">篩選</button>

<table>
    <thead>
    <tr>
        <th>帳號</th>
        <th>密碼</th>
        <th>狀態</th>
        <th>創建時間</th>
        <th>更新時間</th>
        <th>操作</th>
    </tr>
    </thead>
    <tbody>
    <% for (var i = 0; i < users.length && i < 100; i++) { %>
        <tr>
            <td><%= users[i].account %></td>
            <td><%= users[i].password %></td>
            <td><%= users[i].status %></td>
            <td><%= yyyymmddhhMMss(users[i].createdAt) %></td>
            <td><%= yyyymmddhhMMss(users[i].updatedAt) %></td>
            <td>
                <button onclick="editUser('<%= users[i].account %>','<%= users[i].password %>')">修改</button>
                <button onclick="deleteUser('<%= users[i].account %>')">刪除</button>
            </td>
        </tr>
    <% } %>
    </tbody>
</table>
<br><br>

<div style="display:flex; justify-content: space-between;">
    <form style="width: 48%">
        <label for="accountInput"  >帳號：</label>
        <input type="text" id="accountInput" name="accountInput">
        <br><br>
        <label for="passwordInput">密碼：</label>
        <input type="text" id="passwordInput" name="passwordInput">
        <br><br>
        <button onclick="if (validateAccount()) { createUser() }">新增</button>

    </form>
    <form id="update-form" style="display: none;width: 48%">
        <label for="UaccountInput" class="disable" >帳號：</label>
        <input disabled="disabled" class="disable" type="text" id="UaccountInput" name="accountInput">
        <br><br>
        <label for="UpasswordInput">密碼：</label>
        <input type="text" id="UpasswordInput" name="passwordInput">
        <br><br>
        <button onclick="updateUser()">更新</button>
        <button onclick="取消編輯()">取消</button>
    </form>
</div>


</body>

<script>
    function createUser() {
        const 新使用者 = {
            'account': document.getElementById('accountInput').value,
            'password': document.getElementById('passwordInput').value,
            // 'status':document.getElementById('statusInput').value,
        }
        // 處理新增使用者的邏輯
        fetch(`/users/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }, body: JSON.stringify(新使用者)
        })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    alert(data.resultMessage)
                } else {
                    alert(data.resultMessage)
                }
            })
            .catch(error => {
                console.error('Error:', error)
            })
    }

    function editUser(帳號, 密碼) {
        // 處理修改使用者的邏輯
        const updateForm = document.getElementById('update-form');
        document.getElementById('UaccountInput').value = 帳號
        document.getElementById('UpasswordInput').value = 密碼
        // document.getElementById('UstatusInput').value = 狀態
        updateForm.style.display = 'block';
    }
    function deleteUser(account) {
        fetch(`/users/${account}`, {
            method: 'DELETE',
        })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    alert(data.resultMessage)
                } else {
                    alert(data.resultMessage)
                }
            })
            .catch(error => {
                console.error('Error:', error)
            })
    }

    function 取消編輯() {
        const updateForm = document.getElementById('update-form');
        document.getElementById('UaccountInput').value = ''
        document.getElementById('UpasswordInput').value = ''
        // document.getElementById('UstatusInput').value = ''
        updateForm.style.display = 'none';
    }

    function validateAccount() {
        const account = document.getElementById("accountInput").value;
        if (!account) {
            alert("帳號不能為空白");
            return false;
        }
        // 其他的檢查，例如帳號長度是否合法
        return true;
    }

    function updateUser() {
        const 被更新的使用者 = {
            'account': document.getElementById('UaccountInput').value,
            'password': document.getElementById('UpasswordInput').value,
            // 'status':document.getElementById('UstatusInput').value,
        }
        // 處理新增使用者的邏輯
        fetch(`/users/${被更新的使用者.account}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            }, body: JSON.stringify(被更新的使用者)
        })
            .then(res => res.json())
            .then(data => {
                if (data.status) {
                    alert(data.resultMessage)
                } else {
                    alert(data.resultMessage)
                }
            })
            .catch(error => {
                console.error('Error:', error)
            })
    }

    function filterTable() {
        const account = document.getElementById('RaccountInput').value
        const password = document.getElementById('RpasswordInput').value
        const status = document.getElementById('RstatusSelect').value
        var date = new Date(document.getElementById('RcreatedAtStartInput').value);const createdAtStart = date.getTime()/1000;
        date = new Date(document.getElementById('RcreatedAtEndInput').value);const createdAtEnd = date.getTime()/1000;
        date = new Date(document.getElementById('RupdatedAtStartInput').value);const updatedAtStart = date.getTime()/1000;
        date = new Date(document.getElementById('RupdatedAtEndInput').value);const updatedAtEnd = date.getTime()/1000;


        window.location.href = `/users?status=${status}&account=${account}&createdAtStart=${createdAtStart}&createdAtEnd=${createdAtEnd}&updatedAtStart=${updatedAtStart}&updatedAtEnd=${updatedAtEnd}&password=${password}`
    }
</script>

<!--計算=>-->

<% function yyyymmdd(timestamp) {
    var date = new Date(timestamp * 1000);
    var year = date.getFullYear();
    var month = ("0" + (date.getMonth() + 1)).slice(-2);
    var day = ("0" + date.getDate()).slice(-2);

    var yyyymmdd = year + month + day;

    return yyyymmdd;
} %>

<% function yyyymmddhhMMss(timestamp) {
    // let timestamp = 1675907863;
    let date = new Date(timestamp * 1000);
    let year = date.getFullYear();
    let month = date.getMonth() + 1;
    let day = date.getDate();
    let hour = date.getHours();
    let minute = date.getMinutes();
    let second = date.getSeconds();

// 整理格式，補零至兩位數
    month = (month < 10 ? "0" : "") + month;
    day = (day < 10 ? "0" : "") + day;
    hour = (hour < 10 ? "0" : "") + hour;
    minute = (minute < 10 ? "0" : "") + minute;
    second = (second < 10 ? "0" : "") + second;

// 組合並輸出
    let output = year + "" + month + "" + day + "  " + hour + ":" + minute + ":" + second;

    return output;
} %>

<!--<style>-->
<!--    /*body {*/-->
<!--    /*    background-image: url('images/930523982_today_is_Lantern_Festival__massive_rain_in_neon_city_with_cyberpunk__style_.png');*/-->
<!--    /*    background-size: cover;*/-->
<!--    /*    background-repeat: no-repeat;*/-->
<!--    /*}*/-->

<!--    body {-->
<!--        background-image: url('images/930523982_today_is_Lantern_Festival__massive_rain_in_neon_city_with_cyberpunk__style_.png'); /* 背景圖片 */-->
<!--        background-size: cover; /* 將圖片覆蓋整個 body */-->
<!--        font-family: Arial, sans-serif; /* 字型 */-->
<!--    }-->

<!--    h1 {-->
<!--        text-align: center; /* 將標題置中 */-->
<!--        color: #fff; /* 文字顏色 */-->
<!--        text-shadow: 1px 1px #333; /* 文字陰影 */-->
<!--    }-->

<!--    table {-->
<!--        margin: auto; /* 將表格置中 */-->
<!--        width: 80%; /* 表格寬度 */-->
<!--        border-collapse: collapse; /* 移除表格邊框 */-->
<!--        box-shadow: 1px 1px #333; /* 表格陰影 */-->
<!--        color: #fff; /* 表格文字顏色 */-->
<!--    }-->

<!--    th, td {-->
<!--        padding: 8px; /* 表格內距 */-->
<!--        border: 1px solid #333; /* 表格邊框 */-->
<!--        text-align: center; /* 將表格文字置中 */-->
<!--    }-->

<!--    th {-->
<!--        background-color: #333; /* 表格標題背景顏色 */-->
<!--    }-->

<!--    button {-->
<!--        background-color: #333; /* 按鈕背景顏色 */-->
<!--        color: #fff; /* 按鈕文字顏色 */-->
<!--        padding: 8px 16px; /* 按鈕內距 */-->
<!--        border-radius: 4px; /* 按鈕圓角 */-->
<!--        border: none; /* 移除按鈕邊框 */-->
<!--        cursor: pointer; /* 指標樣式 */-->
<!--    }-->

<!--    label {-->
<!--        color: #fff; /* 標籤文字顏色 */-->
<!--    }-->

<!--    input[type="text"] {-->
<!--        padding: 8px; /* 輸入框內距 */-->
<!--        width: 100%; /* 輸入框寬度 */-->
<!--        border-radius: 4px; /* 輸入框圓角 */-->
<!--        border: 1px solid #333; /* 輸入框邊框 */-->
<!--        color: #fff; /* 輸入框文字顏色 */-->
<!--        background-color: #333; /* 輸入框背景顏色 */-->
<!--    }-->

<!--    .disable {-->
<!--        color: gray;-->
<!--    }-->
<!--    input[disabled] {-->
<!--        color: gray;-->
<!--    }-->


<!--</style>-->

</html>
